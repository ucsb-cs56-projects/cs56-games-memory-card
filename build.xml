<project default ="compile">

  <!-- build.xml for Memory Card Game, S12, CS56
       name: Bryce McGaw and Jonathan Yau -->

  <property environment="env"/> <!-- load environment vars -->

  <property name="webRoot"      value="${env.HOME}/public_html/cs56/S12/issues" />
  <property name="webBaseURL"   value="http://www.cs.ucsb.edu/~${env.USER}/cs56/S12/issues" />
  <property name="webBaseURL1"  value="https://foo.cs.ucsb.edu/56mantis/view.php?id=805" />

  <property name="course"       value="cs56" />
  <property name="quarter"      value="13S" />
  <property name="projectName"  value="memorycard" />
  <property name="projectPath"  value="${course}/${quarter}/issues/${projectName}"/>
  <property name="javadocDest"  value="${webRoot}/${projectName}/javadoc" />
  <property name="javadocURL"   value="${webBaseURL}/${projectName}/javadoc"/>
  <property name="mainClass"    value="edu.ucsb.cs56.projects.games.memorycard.MemoryGameGui" />
  <property name="manTick"	    value="${webBaseURL1}" />

  <property name="fullPkg"      value="edu.ucsb.cs56.S12.bryce3325.${course}_${quarter}_${projectName}"/>



  <path id="project.class.path">
    <pathelement location="build"/>
    <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
  </path>



  <!-- target that compiles the src codes and make a build folder to store the class file -->
  <target name="compile" description="Compiles MemoryCardGame">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false">
      <compilerarg value="-Xlint:unchecked" />
      <classpath refid="project.class.path" />
    </javac>
  </target>



  <!-- target that runs the program -->
  <target name="run" description="Runs MemoryCardGame" depends="compile,jar">
    <java jar="dist/${course}_${quarter}_${projectName}.jar" classpath="build" fork="true" />
  </target>



  <!-- target that deletes unnecessary files and directories -->
  <target name="clean" description="Deletes unnecessary files and dir" >
    <delete failonerror="false" verbose="true">
      <fileset dir="build" includes="**/*.class"/>
    </delete>
    <delete dir="javadoc"  quiet="true" />
    <delete dir="dist"     quiet="true" />
    <delete dir="download" quiet="true" />
    <delete dir="temp"     quiet="true" />
  </target>



  <!-- target that generates javadoc files for MemoryCardGame -->
  <target name="javadoc" description="Generates JavaDoc files for MemoryCardGame" depends="compile">

    <delete dir="javadoc"  quiet="true" />

    <javadoc destdir="javadoc" author="true" version="true" use="true">
      <fileset dir="src" includes="**/*.java" />
      <classpath refid="project.class.path" />
    </javadoc>

    <delete quiet="true" dir="${javadocDest}" />

    <copy todir="${javadocDest}" >
      <fileset dir="javadoc" />
    </copy>

    <chmod dir="${javadocDest}" perm="755" type="dir"  includes="**" />
    <chmod dir="${javadocDest}" perm="755" type="file" includes="**/*" />
    <echo>Javadoc deployed to ${javadocURL} </echo>
  </target>



  <!-- target that create a jar file -->
  <target name="jar" depends="compile">
    <mkdir dir="dist" />
    <copy todir="build/images">
      <fileset dir="images"/>
    </copy>
    <jar destfile="dist/${course}_${quarter}_${projectName}.jar" basedir="build" >
      <manifest>
	<attribute name="Main-Class" value="${mainClass}" />
      </manifest>
    </jar>
  </target>



  <!-- target that publishes the JavaDocs and Dist files -->
  <target name="publish" description="Publishes JavaDocs and Dist files" depends="linenumbers,jar,javadoc,dist">
    <mkdir  dir="${webRoot}/${projectName}" />

    <delete dir="${webRoot}/${projectName}/browse" />
    <mkdir  dir="${webRoot}/${projectName}/browse" />

    <delete dir="${webRoot}/${projectName}/download" />
    <mkdir  dir="${webRoot}/${projectName}/download" />

    <delete dir="${webRoot}/${projectName}/images" />
    <mkdir  dir="${webRoot}/${projectName}/images" />

    <copy   file="html/index.html"    todir="${webRoot}/${projectName}" />
    <copy   file="html/colors.jpg"    todir="${webRoot}/${projectName}" />
    <copy   file="numberedsource.txt" todir="${webRoot}/${projectName}/browse" />

    <copy   todir="${webRoot}/${projectName}/download">
      <fileset dir="dist"/>
      <fileset dir="download" />
    </copy>

    <copy   file="build.xml"          todir="${webRoot}/${projectName}/browse" />

    <copy   todir="${webRoot}/${projectName}/browse/src">
      <fileset dir="src" />
    </copy>


    <chmod  dir="${webRoot}/${projectName}" perm="755" type="both" includes="**/*" />
    <echo>Project published to ${webBaseURL}/${projectName} </echo>

  </target>



  <!-- target that creates a file containing all source files with line numbers -->
  <target name="linenumbers" description="Creates a file containing all source files with line numbers">
    <exec executable="bash">
      <arg value="-c" />
      <arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>
    </exec>
  </target>



  <!-- target that creates distributable versions -->
  <target name="dist" description="Create distributable versions" depends="compile,jar" >

    <delete quiet="true">
      <fileset dir="temp" includes="**/*"/>
      <fileset dir="download" includes="**/*"/>
    </delete>

    <mkdir dir="download"/>
    <mkdir dir="temp"/>
    <mkdir dir="temp/${course}_${quarter}_${projectName}"/>

    <copy todir="temp/${course}_${quarter}_${projectName}">
      <fileset dir="." excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/>
    </copy>

    <tar destfile="temp/${course}_${quarter}_${projectName}.tar" basedir="temp" includes="${course}_${quarter}_${projectName}/**"/>
    <gzip zipfile="download/${course}_${quarter}_${projectName}.tgz" src="temp/${course}_${quarter}_${projectName}.tar"/>
    <zip destfile="download/${course}_${quarter}_${projectName}.zip" basedir="temp" includes="${course}_${quarter}_${projectName}/**"/>

    <delete quiet="true">
      <fileset dir="temp" includes="**/*"/>
    </delete>

  </target>

  <!-- target that runs Junit Tests -->
  <target name="test" description="Run JUnit tests on MemoryCardGame" depends="compile">
    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="project.class.path" />
      <batchtest fork="yes">
	<fileset dir="src">
	  <include name="**/*Test.java"/>
	</fileset>
      </batchtest>
      <formatter type="plain" usefile="false"/>
    </junit>
  </target>

</project>
